eXpandchi-Addchi-Fullsigma (XAF) for GW calculation of large interface system 
(The current codes are based on BerkeleyGW-1.2.0 package. We assume users are familiar with BerkeleyGW.)

1) eXanpdchi instruction (expandchi.f90): 

chi(r,r') = Sum_{qGG'} e^{i(q+G)r} chi(q,G,G') e^{-i(q+G')r'}
          = Sum_{qsGG'} [e^{i(qs+G)r} chi(qs,G,G') e^{-i(qs+G')r'} + Sum_{G_I} e^{i(qs+G_I+G)r} chi(qs+G_I,G,G') e^{-i(qs+G_I+G')r'}]
          = Sum_{qsGsGs'} e^{i(qs+Gs)r} chi(qs,Gs,Gs') e^{-i(qs+Gs')r'}
where q G G' stand for unit cell and qs Gs Gs' stand for super cell
if Gs-G = Gs'- G' = G_I  chi(qs,Gs,Gs') = chi(qs+G_I,G,G')
else                     chi(qs,Gs,Gs') = 0

Calculate chimat and chi0mat for the unit cell.
If the q-mesh in super cell (m x m) is pxqx1 with q0 shift, then unit cell qshift is q0/m.

Calculate supercell chimat and chi0mat on pxqx1 mesh, with minimum number of bands but the correct epsilon cutoff. 
This is needed to obtain the correct header information for the supercell chi. 
Note that for this calculation, you can just have one atom in the supercell.

Link or copy the unit cell chimat and chi0mat to chimat1x1 and chi0mat1x1 
Link or copy the supercell chimat and chi0mat to chimat_exactmxm and chi0mat_exactmxm

Change p, q and m accordingly in expandchi.f90, then
ifort expandchi.f90 -o expandchi.x 
./expandchi.x &> out_expandchi 
Output files: chimat_expandmxm and chi0mat_expandmxm

2) Addchi instruction: 
ifort addchi0.f90 -o addchi0.x 
ifort addchi.f90 -o addchi.x

Link or copy the chimat and chi0mat of layer1 to chimat_bn andaddchi chi0mat_bn 
Link or copy the chimat and chi0mat of layer1(or the bilayer) to chimat_bnG and chi0mat_bnG 
Link or copy the chimat and chi0mat of layer2 to chimat_G and chi0mat_G

./addchi0.x > out_addchi0 ./addchi.x < in_addchi > out_addchi

input file in_addchi: number of total q points in super cell 
output file: chimat_add, chi0mat_add

3) Full-Sigma instruction:

With epsilon.cplx.x, use chimat_add and chi0mat_add to get epsmat and eps0mat for the supercell. 
Using the wavefunctions from the full system, compute sigma.

Note: for systems without hybridization, we can run XA(noF)-GW using the wavefunctions of the component of interest. 

